name: Deploy Spring Boot to EC2 (Ubuntu)  # Nombre del workflow

on:
  push:                                   # Workflow se activa cuando se hace push.
    branches:
      - master                              # Solo se ejecuta si el push es en la rama main.

jobs:
  build-and-deploy:                       # Define el trabajo llamado build-and-deploy.
    runs-on: ubuntu-latest                # El trabajo se ejecuta en Ubuntu.

    steps:
      # 1⃣ Descargar el código fuente del repositorio.
      - name: Checkout source code
        uses: actions/checkout@v2

      # 2⃣ Configurar JDK 21 (Java Development Kit).
      - name: Set up JDK 21
        uses: actions/setup-java@v2
        with:
          java-version: 21
          distribution: temurin

      # 3⃣ Construir la aplicación usando Maven.
      - name: Build with Maven
        run: mvn clean package

      - name: List target directory
        run: ls -la target/

      # 4⃣ Copiar el archivo .war a la instancia EC2.
      - name: Copy .war to EC2
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          source: target/HodlVerse-0.0.1-SNAPSHOT.war
          target: /home/ubuntu/
          strip_components: 1

      # 5️⃣ Configurar variables de entorno y desplegar la aplicación en Tomcat.
      - name: Configure environment variables and deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            # 1️⃣ Configurar variables de entorno en el archivo /etc/environment para persistencia.
            echo "export DB_ENDPOINT=${{ secrets.DB_ENDPOINT }}" | sudo tee -a /etc/environment
            echo "export DB_USERNAME=${{ secrets.DB_USERNAME }}" | sudo tee -a /etc/environment
            echo "export DB_PASSWORD=${{ secrets.DB_PASSWORD }}" | sudo tee -a /etc/environment

            # 2️⃣ Recargar las variables de entorno en la sesión actual.
            source /etc/environment

            # 3️⃣ Crear el directorio de despliegue si no existe.
            sudo mkdir -p /var/lib/tomcat10/webapps/ROOT

            # 4️⃣ Extraer el contenido del archivo .war en el directorio de despliegue de Tomcat.
            sudo unzip -o /home/ubuntu/HodlVerse-0.0.1-SNAPSHOT.war -d /var/lib/tomcat10/webapps/ROOT/

            # 5️⃣ Mover los archivos de la carpeta WEB-INF a la raíz del directorio de despliegue.
            sudo mv /var/lib/tomcat10/webapps/ROOT/WEB-INF/* /var/lib/tomcat10/webapps/ROOT/
            sudo rmdir /var/lib/tomcat10/webapps/ROOT/WEB-INF

            # 6️⃣ Cambiar el propietario y permisos del directorio para que Tomcat pueda acceder.
            sudo chown -R tomcat:tomcat /var/lib/tomcat10/webapps/ROOT/
            sudo chmod -R 755 /var/lib/tomcat10/webapps/ROOT/

            # 7️⃣ Reiniciar el servicio Tomcat para cargar el nuevo contenido desplegado.
            sudo systemctl restart tomcat10
